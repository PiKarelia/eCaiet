// <auto-generated />
using eCaiet.DAL.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace eCaiet.DAL.Migrations
{
    [DbContext(typeof(EDbContext))]
    [Migration("20180610174924_fakeFriends")]
    partial class fakeFriends
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eCaiet.DAL.Models.DB.ChatRecords", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<Guid>("ReceiverGuid");

                    b.Property<DateTime>("SendTime");

                    b.Property<Guid>("SenderGuid");

                    b.HasKey("Guid");

                    b.HasIndex("ReceiverGuid");

                    b.HasIndex("SenderGuid");

                    b.ToTable("ChatRecords");
                });

            modelBuilder.Entity("eCaiet.DAL.Models.DB.Course", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("Public");

                    b.Property<Guid>("UserGuid");

                    b.HasKey("Guid");

                    b.HasIndex("Name");

                    b.HasIndex("UserGuid");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("eCaiet.DAL.Models.DB.File", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid?>("CourseGuid");

                    b.Property<DateTime>("CreationDate");

                    b.Property<byte[]>("Data");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid?>("OwnerGuid");

                    b.HasKey("Guid");

                    b.HasIndex("CourseGuid");

                    b.HasIndex("Name");

                    b.HasIndex("OwnerGuid")
                        .IsUnique()
                        .HasFilter("[OwnerGuid] IS NOT NULL");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("eCaiet.DAL.Models.DB.Friend", b =>
                {
                    b.Property<Guid>("Friend2Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("Friend1Guid");

                    b.Property<Guid?>("Friend1Guid1");

                    b.Property<Guid?>("Friend2Guid1");

                    b.HasKey("Friend2Guid");

                    b.HasAlternateKey("Friend1Guid");

                    b.HasIndex("Friend1Guid1");

                    b.HasIndex("Friend2Guid1");

                    b.ToTable("Friend");
                });

            modelBuilder.Entity("eCaiet.DAL.Models.DB.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254);

                    b.Property<string>("FirstName")
                        .HasMaxLength(35);

                    b.Property<string>("LastName")
                        .HasMaxLength(35);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("Guid");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eCaiet.DAL.Models.DB.ChatRecords", b =>
                {
                    b.HasOne("eCaiet.DAL.Models.DB.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverGuid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eCaiet.DAL.Models.DB.User", "Sender")
                        .WithMany("ChatRecords")
                        .HasForeignKey("SenderGuid");
                });

            modelBuilder.Entity("eCaiet.DAL.Models.DB.Course", b =>
                {
                    b.HasOne("eCaiet.DAL.Models.DB.User", "User")
                        .WithMany("Courses")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eCaiet.DAL.Models.DB.File", b =>
                {
                    b.HasOne("eCaiet.DAL.Models.DB.Course", "Course")
                        .WithMany("Files")
                        .HasForeignKey("CourseGuid");

                    b.HasOne("eCaiet.DAL.Models.DB.User", "Owner")
                        .WithOne("Avartar")
                        .HasForeignKey("eCaiet.DAL.Models.DB.File", "OwnerGuid");
                });

            modelBuilder.Entity("eCaiet.DAL.Models.DB.Friend", b =>
                {
                    b.HasOne("eCaiet.DAL.Models.DB.User", "Friend1")
                        .WithMany("Friends")
                        .HasForeignKey("Friend1Guid1");

                    b.HasOne("eCaiet.DAL.Models.DB.User", "Friend2")
                        .WithMany()
                        .HasForeignKey("Friend2Guid1");
                });
#pragma warning restore 612, 618
        }
    }
}
